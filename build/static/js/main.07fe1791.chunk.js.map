{"version":3,"sources":["components/interact.js","App.js","index.js"],"names":["Web3","require","axios","getTokenID","ipfsLink","parts","split","length","json","getNft","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee2","web3","Arkius","contractAddress","contract","totalAmount","nftList","nftItem","i","wrap","_context2","prev","next","window","ethereum","enable","currentProvider","alert","utils","toChecksumAddress","process","eth","Contract","abi","methods","totalToken","call","sent","ownerOf","delegateYield","_callee","tokenID","_context","tokenURI","get","then","res","data","push","stop","abrupt","apply","this","arguments","transferNft","_ref2","_callee3","tokenId","_context3","console","log","transferFrom","send","from","_x","App","_useState","useState","_useState2","slicedToArray","_useState3","_useState4","csvData","setCsvData","_useState5","_useState6","nftData","setNftData","_useState7","_useState8","isLoading","setIsLoading","tempArray","useEffect","getMintedNft","react_default","createElement","className","Fragment","type","accept","onChange","e","files","target","Papa","parse","complete","results","Button","variant","onClick","map","undefined","nft","name","selectedData","rootElement","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.07fe1791.chunk.js","sourcesContent":["var Web3 = require(\"web3\");\r\nvar axios = require('axios');\r\n\r\nconst getTokenID = (ipfsLink) => {\r\n  const parts = ipfsLink.split(\"/\");\r\n  if (parts.length > 3) {\r\n    const json = parts[parts.length - 1].split(\".\");\r\n    return json[json.length - 2];\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\n\r\nexport const getNft = async () => {\r\n  if (window.ethereum) {\r\n    window.web3 = new Web3(window.ethereum);\r\n    window.ethereum.enable();\r\n  } else if (window.web3) {\r\n    window.web3 = new Web3(window.web3.currentProvider);\r\n  } else {\r\n    window.alert(\r\n      \"Non-Ethereum browser detected. You should consider trying MetaMask!\"\r\n    );\r\n  }\r\n  var web3 = window.web3;\r\n\r\n  const Arkius = require(\"../assets/abi/Arkius.json\");\r\n  const contractAddress = web3.utils.toChecksumAddress(\r\n    process.env.REACT_APP_CONTRACT_ADDRESS_TESTNET\r\n  );\r\n  const contract = new web3.eth.Contract(Arkius.abi, contractAddress);\r\n  \r\n  const totalAmount = await contract.methods.totalToken().call();\r\n\r\n  var nftList = [];\r\n  var nftItem = '';\r\n  for(let i = 1 ; i <= totalAmount ; i++){\r\n    const ownerAddress = await contract.methods.ownerOf(i).call();\r\n    if(ownerAddress === \"0x791A6891cd4802200AA2cFfAc6770041B5ab643e\"){\r\n      nftItem = await contract.methods.tokenURI(i).call();\r\n      // console.log('nftItem - ', nftItem);\r\n      const tokenID = getTokenID(nftItem);\r\n      // console.log('tokenID - ', tokenID);\r\n      await axios.get(nftItem).then(res => {\r\n        res.data[\"tokenID\"] = tokenID;\r\n        // console.log(res.data);\r\n        nftList.push(res.data);\r\n      });\r\n    }    \r\n  }\r\n\r\n  // console.log('nftList - ', nftList);\r\n\r\n  return nftList;\r\n};\r\n\r\nexport const transferNft = async (tokenId) => {\r\n  console.log('tokenId - ', tokenId);\r\n\r\n  if (window.ethereum) {\r\n    window.web3 = new Web3(window.ethereum);\r\n    window.ethereum.enable();\r\n  } else if (window.web3) {\r\n    window.web3 = new Web3(window.web3.currentProvider);\r\n  } else {\r\n    window.alert(\r\n      \"Non-Ethereum browser detected. You should consider trying MetaMask!\"\r\n    );\r\n  }\r\n  var web3 = window.web3;\r\n\r\n  const Arkius = require(\"../assets/abi/Arkius.json\");\r\n  const contractAddress = web3.utils.toChecksumAddress(\r\n    process.env.REACT_APP_CONTRACT_ADDRESS_TESTNET\r\n  );\r\n  const contract = new web3.eth.Contract(Arkius.abi, contractAddress);\r\n\r\n  for(let i = 0 ; i < tokenId.length; i++ ){\r\n    // const res = await contract.methods.approve('0xfeb63a01ca567d867a302b7efd2e622b0e33f2af', tokenId[i]).send({from: \"0x294Fa0cd606feF90209f0d9154821D92FCB32580\"});\r\n    // console.log('address - ', tokenId[i][0]);\r\n    // console.log('tokenId - ', tokenId[i][1]);\r\n\r\n    const res = await contract.methods.transferFrom(\"0x791A6891cd4802200AA2cFfAc6770041B5ab643e\", tokenId[i][0], tokenId[i][1])\r\n      .send({from: \"0x791A6891cd4802200AA2cFfAc6770041B5ab643e\"});\r\n    console.log('res - ', res);\r\n  }\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport \"./styles.css\";\r\nimport { getNft, transferNft } from './components/interact';\r\nimport { Button } from 'react-bootstrap';\r\nimport Papa from \"papaparse\";\r\n\r\nexport default function App() {\r\n  const [tokenId, setTokenId] = useState([]);\r\n  const [csvData, setCsvData] = useState([]);\r\n  const [nftData, setNftData] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const tempArray = [];\r\n\r\n  useEffect(() => {\r\n    getMintedNft();\r\n  }, []);\r\n\r\n  const getMintedNft = async () => {\r\n    // const res = await getNft();\r\n    getNft().then(res => {\r\n      setIsLoading(false);\r\n      console.log('res - ', res);\r\n      setNftData(res);\r\n    });    \r\n  }\r\n\r\n  const batchClick = () => {\r\n    console.log('csvData - ', csvData);\r\n    csvData.map((data) => {\r\n      if(data[1] !== undefined){\r\n        console.log(data[1]);\r\n        nftData.map((nft) => {\r\n          // console.log('nft - ', nft);\r\n          if(nft.name === data[1]){\r\n            var selectedData = [data[0], nft.tokenID];\r\n            // console.log('selectedData - ', selectedData);\r\n            tempArray.push(selectedData);\r\n            console.log('tempArray - ', tempArray);\r\n            transferNft(tempArray);\r\n          }\r\n        })\r\n      }\r\n    }); \r\n  }\r\n\r\n  return (\r\n    <div className=\"App p-5\">\r\n      {isLoading ?\r\n        <>\r\n          <h2 className='text-center mb-5'>\r\n            Loading ...\r\n          </h2>\r\n        </>\r\n      :\r\n        <>\r\n          <h2 className='text-center mb-5'>\r\n            Please click batch process!\r\n          </h2>\r\n          <div className='d-flex justify-content-between'>\r\n            <input\r\n              type=\"file\"\r\n              accept=\".csv,.xlsx,.xls\"\r\n              onChange={(e) => {\r\n                const files = e.target.files;\r\n                // console.log(files);\r\n                if (files) {\r\n                  // console.log(files[0]);\r\n                  Papa.parse(files[0], {\r\n                    complete: function(results) {\r\n                      // console.log(\"Finished:\", results.data);\r\n                      setCsvData(results.data);\r\n                    }}\r\n                  )\r\n                }\r\n              }}\r\n            />\r\n            <Button variant=\"primary\" onClick={() => batchClick()}>\r\n              Batch process\r\n            </Button>\r\n          </div>\r\n        </>\r\n      }     \r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./App\";\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  rootElement\r\n);\r\n"],"sourceRoot":""}